
package entities;

import java.io.Serializable;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Data
//Here we rely on the id values being autogenerated!
@EqualsAndHashCode(of={"id"})
@Entity
@NoArgsConstructor
@RequiredArgsConstructor
public class Meeting implements Serializable {
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    @NonNull
    private String title;

    @NonNull
    // These are deprecated (not recommended) now.
    // Kept to show how real life legacy code needs maintenance.
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_stamp")
    private Calendar start;

    @NonNull
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "finish_stamp")
    private Calendar finish;

    // "Inverse side" of a many-to-many relationship
    @ManyToMany(mappedBy = "meetings")
    private List<Employee> employees = new LinkedList<>();


    public void addEmployee(Employee e) {
        this.employees.add(e);
    }
}
