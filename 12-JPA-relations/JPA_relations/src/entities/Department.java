
package entities;

import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OrderBy;
import lombok.Data;
import lombok.EqualsAndHashCode;

@Data
// Here we rely on the id values being autogenerated!
@EqualsAndHashCode(of={"id"})
@Entity
public class Department implements Serializable {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    private String name;

    // Inverse side of a many-to-one relationship
    @OneToMany(mappedBy = "department", fetch = FetchType.LAZY)
    // Order employees by their name, descending (when fetching from database)
    @OrderBy("name DESC")
    private List<Employee> employees;

    public Department() {
        employees = new LinkedList<>();
    }

    public void addEmployee(Employee e) {
        this.employees.add(e);
    }
}
